{"version":3,"file":"assertEqual.js","sourceRoot":"","sources":["../src/assertEqual.ts"],"names":[],"mappings":";;;AAAA,qCAAkC;AAElC,+DAA4D;AAErD,MAAM,WAAW,GAAG,CACzB,CAAI,EACJ,CAAI,EACJ,UAA4B,GAAG,EAAE;IAC/B,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACpB,OAAO,qBAAqB,IAAI,CAAC,SAAS,CACxC,CAAC,CACF,oBAAoB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC;AAC3C,CAAC,EACD,EAAE;IACF,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;QACxC,OAAO,IAAA,yCAAmB,EAAC,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;KAC3C;IACD,OAAO,IAAA,eAAM,EAAC,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC;AAClC,CAAC,CAAC;AAdW,QAAA,WAAW,eActB","sourcesContent":["import { assert } from \"./assert\";\nimport { AssertionMessage } from \"./type/AssertionMessage\";\nimport { assertEqualElements } from \"./assertEqualElements\";\n\nexport const assertEqual = <T>(\n  a: T,\n  b: T,\n  message: AssertionMessage = () => {\n    console.error(a, b);\n    return `Assertion failed: ${JSON.stringify(\n      a\n    )} is not equal to ${JSON.stringify(b)}`;\n  }\n) => {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return assertEqualElements(a, b, message);\n  }\n  return assert(a === b, message);\n};\n"]}